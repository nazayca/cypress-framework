


01-08-2024 Cypress Selectors

RECAP:
SELECTORS or LOCATORS: Unique identifiers to interact with or verify web elements. 

cy.get(selector) // finds the element in a unique way


Types of CSS Selectors
ID: fastest, most reliable and stable way to identify an element (#id_value)
CLASS: it is not always unique but commonly used for elements (.class_value)
TAG: not recommended, it returns multiple elements most of the time. Can be useful for h1, img, a 
VISIBLE TEXT: you can use it but not recommended (it returns only one - first matching element and it will break
in a different language)

ATTRIBUTES: Very common to use after id 
[data-qa] // select all the elements which have attribute called data-qa 
a[data-qa] // select all the elements which are links and have attribute called data-qa 
a[data-qa="value"] // select all the elements which are links and have attribute called data-qa and data-qa equals "value"



TEST CASE: 
Go to https://techglobal-training.com/frontend
Click on Dynamic Elements card
Validate that there are 2 boxes paragraphs boxes with "Box 1" and "Box 2" texts


DYNAMIC ATTRIBUTES with DYNAMIC ELEMENTS 
-These are elements having dynamic attributes which change with each browser session
-You can rely on these attributes even though it is id or any other attribute

SOLUTION: Attribute is dynamic (changes) but some parts are static (does not change)

<p id="box_1_d2468d">Box 1</p>

p[id^='box_1']
p[id*='box_1']


tag[attribute="value"]          -> equals 
tag[attribute*="value"]         -> contains 
tag[attribute^="value"]         -> starts-with 
tag[attribute$="value"]         -> ends-with 



<p id="d2sdkufhis468d">Box 1</p>
<p id="sldfigh8347563">Box 2</p>

If the attributes are completely dynamic, you cannot use *, ^, $
One option could be using visible texts as below but it is not the best option

cy.contains('Box 1')
cy.contains('Box 2')

SOLUTION: LOCATE STABLE PARENT AND MOVE TO THE CHILD

direct child       parentTag > childTag
descendant child   parentTag childTag 

<div id="container">
    <span id="text-holder">
        <p id="sdhf764873">Hello World</>
    </span>
</div>

#text-holder > p        // select the element which has id equals text-holder and move to it's direct child with the p tag
#container p (NOT FOUND)


WHEN TO MOVE FROM PARENT ELEMENT TO CHILD?
1. You could not locate the element you would like to with any attributes or tags, texts 
2. Now, you can look for the first parent and try to find it in a stable way    
    If you could locate the first parent, then use it to move to the child element 
3. If the first parent cannot be located as well, then move up to the tree for upper parents (direct syntax with >)
    If you could locate the these parents, then use it to move to the child element (descendant syntax with space)



XPATH is another way to locate elements but not used commonly with Cypress or Playwright
It is common to use with Selenium

The only advantage it has over CSS is that XPATH moves to the parent as well but CSS moves to the child only

CSS is faster than xpath and have also better syntax than XPATH 



ID              #id_value
CLASS           .class_value
ATTRIBUTE       tag[attribute="value"]
PARENT-CHILD    parent > child or parent child 

*
$
^
tag[attribute1="value1"][attribute2="value2"]

4       5n+4
9
14
19

Tuesday Cypress Automation
Wednesday 4 PM JS + Mentoring submission